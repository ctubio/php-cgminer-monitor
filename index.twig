<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>php-cgminer-monitor</title>
    <link href="css/bootstrap.min.css" rel="stylesheet">
  </head>
  <body>
    <br />
    <div class="container">
      <div role="tabpanel">
        <ul class="nav nav-tabs" role="tablist">
          {% for miner in miners %}
          <li role="presentation" class="{{ miner['active'] }}"><a href="#miner{{ miner['id'] }}" aria-controls="miner{{ miner['id'] }}" role="tab" data-toggle="tab">{{ miner['title'] }}</a></li>
          {% endfor %}
        </ul>
        <div class="tab-content">
          {% for miner in miners %}
          <div role="tabpanel" class="tab-pane {{ miner['active'] }}" id="miner{{ miner['id'] }}">{{ minerHtml[miner['id']] }}</div>
          {% endfor %}
        </div>
      </div>
    </div>
    <script src="js/jquery.js"></script>
    <script src="js/bootstrap.min.js"></script>
    <script type="text/javascript">
    var moveQuota = function(miner, pool) {
      var next = 0;
      $('form.poolquota-'+miner).each(function(){
        if ($(this).hasClass('poolquota-'+miner+'-'+pool) || parseInt($(this).find('input[name="quota"]').val(), 10)==0) return;
        $(this).find('input[name="quota"]').val(parseInt($(this).find('input[name="quota"]').val(),10)-1);
        $('form.poolquota-'+miner+'-'+pool).find('input[name="quota"]').val(parseInt($('form.poolquota-'+miner+'-'+pool).find('input[name="quota"]').val(),10)+1);
        $('form.poolquota-'+miner+'-'+pool).find('input[name="reset"]').val(0);
        $('form.poolquota-'+miner+'-'+pool).submit();
        $('form.poolquota-'+miner+'-'+pool).find('input[name="reset"]').val(1);
        next++;
      });
      return next;
    };

    var moveQuota20 = function(miner, pool) {
      setTimeout(function(){
        var quotaInterval20 = setInterval(function(){
          if (!moveQuota(miner, pool)) clearInterval(quotaInterval20);
        },1200000);
      },parseInt(prompt('Start in how many minutes?'),10)*60000);
    };

    var moveQuota5 = function(miner, pool) {
      setTimeout(function(){
        var quotaInterval5 = setInterval(function(){
          if (!moveQuota(miner, pool)) clearInterval(quotaInterval5);
        },300000);
      },parseInt(prompt('Start in how many minutes?'),10)*60000);
    };

    var moveQuota1 = function(miner, pool) {
      setTimeout(function(){
        var quotaInterval1 = setInterval(function(){
          if (!moveQuota(miner, pool)) clearInterval(quotaInterval1);
        },60000);
      },parseInt(prompt('Start in how many minutes?'),10)*60000);
    };

    $(document).ready(function() {
      $('form').submit(function(event) {
        var _self = $(this), data = _self.serializeArray();
        if (_self.find('input[name="cmd"]').val()=='poolquota')
          jQuery.each(data, function(i, _data) {
            if (_data.name=='pool') {
              jQuery.each(data, function(_i, __data) {if (_data==__data) delete data[_i];});
              $('form.poolquota input[name="pool"]').each(function(){
                if ($(this).parents('form').find('input[name="tab"]').val()==_self.find('input[name="tab"]').val())
                  data.push({name:_data.name+'[]',value:$(this).val()});
              });
            }
            else if (_data.name=='quota') {
              jQuery.each(data, function(_i, __data) {if (_data==__data) delete data[_i];});
              $('form.poolquota input[name="quota"]').each(function(){
                if ($(this).parents('form').find('input[name="tab"]').val()==_self.find('input[name="tab"]').val())
                data.push({name:'quota[]',value:$(this).val()});
              });
            }
          });
        $.ajax({
            type     : 'POST',
            url      : '/index.php',
            data     : data,
            encode   : true
        }).done(function(data) {/*$('.alert').remove();*/$('.container').prepend(data);});
        event.preventDefault();
      });
      {% if tab > 0 %}
        $('.nav li').eq({{tab}}).find('a').click();
      {% endif %}
      var _slush_state = -2;
      var getRemoteData = function() {
        $.getJSON("https://mining.bitcoin.cz/stats/json", function(data) {
          $(".slush_round_duration").html(data.round_duration);
          $(".slush_luck_1").html(data.luck_1+'%');
          $(".slush_luck_7").html(data.luck_7+'%');
          $(".slush_luck_30").html(data.luck_30+'%');
          $(".slush_hash").html((data.ghashes_ps/1000000).toFixed(2)+' PH/s');
          var slush_sec = data.round_duration.split(':');
          slush_sec = (+slush_sec[0]) * 60 * 60 + (+slush_sec[1]) * 60 + (+slush_sec[2]);
          var slush_state = 0;
          if (slush_sec<60*21) slush_state = -1;
          else if (slush_sec>60*60*10) slush_state = 1;
          if (_slush_state!=-2 && $('.slush_auto').prop('checked') && slush_state!=_slush_state) {
            if (slush_state==1) {
              $('form.switchpool-0-3').find('input[name="reset"]').val(0);
              $('form.switchpool-0-3').submit();
              $('form.switchpool-0-3').find('input[name="reset"]').val(1);
            } else if (slush_state==-1) {
              $('form.switchpool-1-1').find('input[name="reset"]').val(0);
              $('form.switchpool-1-1').submit();
              $('form.switchpool-1-1').find('input[name="reset"]').val(1);
            } else if (slush_state==0) {
              $('form.switchpool-2-2').find('input[name="reset"]').val(0);
              $('form.switchpool-2-2').submit();
              $('form.switchpool-2-2').find('input[name="reset"]').val(1);
              $('form.switchpool-3-1').find('input[name="reset"]').val(0);
              $('form.switchpool-3-1').submit();
              $('form.switchpool-3-1').find('input[name="reset"]').val(1);
            }
          }
          _slush_state = slush_state;
        });
        $.getJSON("http://cors.io/?u=http://solo.ckpool.org/users/1CArLeSkmBT1BkkcADtNrHoLSgHVhBcesk", function(data) {
          $(".solo_hash").html(data.hashrate1m);
          $(".solo_workers").html(data.workers);
          $(".solo_share").html((data.shares+'').replace(/(\d)(?=(\d{3})+(?:\.\d+)?$)/g, "$1."));
          $(".solo_best").html((data.bestshare.toFixed(0)+'').replace(/(\d)(?=(\d{3})+(?:\.\d+)?$)/g, "$1."));
          $(".solo_ever").html((data.bestever+'').replace(/(\d)(?=(\d{3})+(?:\.\d+)?$)/g, "$1."));
        });
        $.ajax({
          url: 'http://cors.io/?u=https://api.coinbase.com/v1/prices/spot_rate?currency=EUR',
          type: 'GET',
          dataType: 'json',
          success: function (data) {
            if (!data || !data.amount) return;
            $('.coinbase-price').html(data.amount+' â‚¬');
          }
        });
      };
      setInterval(function(){getRemoteData();},141000);
      getRemoteData();
    });
  </script>
  </body>
</html>
